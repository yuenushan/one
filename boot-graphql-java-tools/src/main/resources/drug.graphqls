extend type Query {
#    regimens(first: Int, after: String): RegimenConnection @connection(for: "Regimen")
    regimen(name: String!): Regimen
#    drugs(first: Int, after: String): DrugConnection @connection(for: "Drug")
    drugs: [Drug]
    drug(name: String!): Drug
}

type Mutation {
    createDrug(drug_name: String): Drug
    createRegimen(regimen: RegimenInput): Regimen
}


extend type Subscription {
    drugsSubscription: Drug
}

type Regimen {
    id: ID
    name: String
    drugs: [Drug]
}

type Drug {
    id: ID
    name: String
    regimens: [Regimen]
}

input RegimenInput {
    name: String!
    drugNames: [String!]!
}
